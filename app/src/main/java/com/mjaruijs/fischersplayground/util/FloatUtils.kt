package com.mjaruijs.fischersplayground.utilimport com.mjaruijs.fischersplayground.math.vectors.Vector2import com.mjaruijs.fischersplayground.math.vectors.Vector3object FloatUtils {    private const val EPSILON = 0.00005f        fun roundToDecimal(value: Float, n: Int): Float {        return "%.${n}f".format(value).toFloat()    }    fun compare(a: Float, b: Float): Boolean {        return kotlin.math.abs(a - b) < EPSILON    }    fun compare(a: Vector2, b: Vector2): Boolean {        if (!compare(a[0], b[0])) {            return false        }        return compare(a[1], b[1])    }    fun compare(a: Vector3, b: Vector3): Boolean {        for (i in 0 until 3) {            if (!compare(a[i], b[i])) {                return false            }        }        return true    }}